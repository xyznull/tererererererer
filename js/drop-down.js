const{Core,Utils}=Global,{$state}=Utils,ATTR_DROP_OPTION="data-dropdown-option";customElements.define("drop-down",class extends Core{propTypes={"close-on-change":Boolean,"update-value":Boolean};elements={$:["selected-value","select","details"]};render(){this._handleDocClick=this._handleDocClick.bind(this),document.addEventListener("click",this._handleDocClick),this.$({change:this._handleChange}),this.$("select",{change:this._handleSelectChange})}destroy(){document.removeEventListener("click",this._handleDocClick)}_handleChange(e){const target=e.target;target.hasAttribute(ATTR_DROP_OPTION)&&(e.stopPropagation(),this._updateSelect(target.value),this.prop("close-on-change")&&this.close())}_handleDocClick(e){this.contains(e.target)||this.close()}_updateSelect(value){this.$("select")&&(this.$("select").value=value,this.$("select").dispatchEvent(new Event("change",{bubbles:!0})))}_handleSelectChange(e){this.prop("update-value")&&this.$("selected-value")&&(this.$("selected-value").innerText=e.target.options[e.target.selectedIndex].text)}close(){this.open=!1}set open(state){this.$("details").open=state}});
//# sourceMappingURL=/cdn/shop/t/17/assets/drop-down.js.map?v=134248009384311772371718817532
